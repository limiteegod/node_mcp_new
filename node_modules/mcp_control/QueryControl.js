var async = require('async');
var esut = require('easy_util');
var digestUtil = esut.digestUtil;
var dateUtil = esut.dateUtil;

var config = require('mcp_config');
var errCode = config.ec;
var prop = config.prop;
var game = config.game;

var log = esut.log;
var pageUtil = esut.pageUtil;

var dao = require('mcp_dao');
var dc = dao.dc;

var cons = require('mcp_cons');
var ticketStatus = cons.ticketStatus;
var printStatus = cons.printStatus;
var userType = cons.userType;
var orderStatus = cons.orderStatus;
var gameType = cons.gameType;

var service = require('mcp_service');
var orderService = service.orderSer;
var ticketService = service.ticketSer;
var stationService = service.stationSer;
var digestService = service.digestSer;
var notifySer = service.notifySer;
var queenSer = service.queenSer;


var QueryControl = function(){
    var self = this;
    self.cmd = {
        'Q01':1, 'Q02':2, 'Q03':3, 'Q04':4, 'Q05':5, 'Q06':6,
        'Q07':7, 'Q08':8, 'Q09':9, 'Q10':10, 'Q11':11, 'Q12':12, 'Q13':13,
        'Q14':14, 'Q15':15, 'Q16':16, 'Q17':17
    };
    self.cmdArray = [{},
        {id:1, code:'Q01', fromType:prop.digestFromType.DB, des:""},
        {id:2, code:'Q02', fromType:prop.digestFromType.FIX, des:''},
        {id:3, code:'Q03', fromType:prop.digestFromType.CACHE, des:''},
        {id:4, code:'Q04', fromType:prop.digestFromType.CACHE, des:''},
        {id:5, code:'Q05', fromType:prop.digestFromType.CACHE, des:''},
        {id:6, code:'Q06', fromType:prop.digestFromType.FIX, des:''},
        {id:7, code:'Q07', fromType:prop.digestFromType.CACHE, des:''},
        {id:8, code:'Q08', fromType:prop.digestFromType.CACHE, des:''},
        {id:9, code:'Q09', fromType:prop.digestFromType.CACHE, des:''},
        {id:10, code:'Q10', fromType:prop.digestFromType.CACHE, des:''},
        {id:11, code:'Q11', fromType:prop.digestFromType.CACHE, des:''},
        {id:12, code:'Q12', fromType:prop.digestFromType.FIX, des:''},
        {id:14, code:'Q13', fromType:prop.digestFromType.FIX, des:''},
        {id:15, code:'Q14', fromType:prop.digestFromType.FIX, des:''},
        {id:15, code:'Q15', fromType:prop.digestFromType.FIX, des:''},
        {id:16, code:'Q16', fromType:prop.digestFromType.FIX, des:''},
        {id:17, code:'Q17', fromType:prop.digestFromType.FIX, des:'取通知队列'}
    ];
};

QueryControl.prototype.handle = function(headNode, bodyStr, userCb)
{
    var self = this;
    async.waterfall([
        //是否是支持的cmd
        function(cb)
        {
            var cmd = self.cmd[headNode.cmd];
            if(cmd == undefined)
            {
                cb(ec.E9000);
            }
            else
            {
                cb(null);
            }
        },
        //获得密钥
        function(cb)
        {
            var cmd = self.cmdArray[self.cmd[headNode.cmd]];
            var userTypeId = userType.CHANNEL;
            digestService.getKey({fromType:cmd.fromType, userId:headNode.channelCode, userType:userTypeId},
            function(err, key){
                cb(err, key);
            });
        },
        //先解密
        function(key, cb)
        {
            log.info(key);
            var decodedBodyStr = digestUtil.check(headNode, key, bodyStr);
            try {
                var bodyNode = JSON.parse(decodedBodyStr);
                headNode.key = key;
                cb(null, bodyNode);
            }
            catch (err)
            {
                cb(ec.E9003);
            }
        },
        //check the param
        function(bodyNode, cb){
            var method = 'check' + headNode.cmd;
            self[method](null, headNode, bodyNode, function(err){
                cb(err, bodyNode);
            });
        },
        //业务处理
        function(bodyNode, cb){
            var cmd = 'handle' + headNode.cmd;
            self[cmd](null, headNode, bodyNode, cb);
        }
    ], function (err, bodyNode) {
        userCb(err, bodyNode);
    });
};

QueryControl.prototype.checkQ01 = function(user, headNode, bodyNode, cb)
{
    cb(null);
};

QueryControl.prototype.checkQ02 = function(user, headNode, bodyNode, cb)
{
    cb(null);
};


QueryControl.prototype.checkQ03 = function(user, headNode, bodyNode, cb)
{
    cb(null);
};

QueryControl.prototype.checkQ04 = function(user, headNode, bodyNode, cb)
{
    cb(null);
};

QueryControl.prototype.checkQ05 = function(user, headNode, bodyNode, cb)
{
    cb(null);
};

QueryControl.prototype.checkQ06 = function(user, headNode, bodyNode, cb)
{
    cb(null);
};

QueryControl.prototype.checkQ12 = function(user, headNode, bodyNode, cb)
{
    cb(null);
};

QueryControl.prototype.checkQ17 = function(user, headNode, bodyNode, cb)
{
    cb(null);
};


/**
 * 渠道用户查找自己的通知队列
 * @param user the print center.
 * @param headNode
 * @param bodyNode bodyNode.rst is the result, bodyNode.pi is the page info.
 * @param cb
 */
QueryControl.prototype.handleQ17 = function(user, headNode, bodyNode, cb)
{
    var self = this;
    var backBodyNode = {};
    cb(null, backBodyNode);
};

var queryControl = new QueryControl();
module.exports = queryControl;