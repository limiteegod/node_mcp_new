var async = require('async');

var config = require('mcp_config');
var prop = config.prop;
var ec = config.ec;

var cons = require('mcp_cons');
var orderStatus = cons.orderStatus;
var notifyMsgStatus = cons.notifyMsgStatus;

var transaction = require('./Transaction.js');

var dao = require('mcp_dao');
var dc = dao.dc;

var esut = require("easy_util");
var log = esut.log;
var dateUtil = esut.dateUtil;
var digestUtil = esut.digestUtil;
var dateUtil = esut.dateUtil;

var kvService = require('./KvService.js');

var NotifyService = function(){};

/**
 * 发送订单通知
 * @param order
 * @param cb
 */
NotifyService.prototype.sendOrder = function(order, cb)
{
    var table = dc.mg.get("notify_channel_all");
    var channelCode = order.tickets[0].channelCode;
    var cond = {_id:channelCode};
    table.findOne(cond, {}, [], function(err, nc){
        if(nc)
        {
            delete order.version;
            delete order.printCount;
            delete order.printFailCount;
            order.acceptTime = dateUtil.toOldTime(order.acceptTime);
            order.printTime = dateUtil.toOldTime(order.printTime);
            var headNode = {ver:'s.1.01', id:digestUtil.createUUID(), timestamp:dateUtil.getOldCurTime(),
                channelCode:channelCode, cmd:'N02', digestType:'md5'};
            var bodyNode = {};
            bodyNode.repCode = ec.E0000.repCode;
            bodyNode.description = ec.E0000.description;
            bodyNode.order = order;
            var bodyStr = JSON.stringify(bodyNode);
            var encodedBodyStr = digestUtil.generate(headNode, nc.key, bodyStr);
            var msgNode = {head:headNode, body:encodedBodyStr};
            log.info(msgNode);

            kvService.getNotifyQueenId(function(err, data){
                if(data)
                {
                    var msg = JSON.stringify(msgNode);
                    var hId = digestUtil.md5(msg);
                    var notifyMsg = {_id:data.value, hId:hId, msg:msg, status:notifyMsgStatus.unused};
                    notifyMsg.createTime = new Date();

                    var colName = 'notify_queen_' + channelCode;
                    var table = dc.mg.getConn().collection(colName);
                    table.save(notifyMsg, [], function(err, data){
                        cb(err, null);
                    });
                }
                else
                {
                    cb(err, null);
                }
            });
        }
        else
        {
            cb(null, null);
        }
    });
};

module.exports = new NotifyService();