var CronJob = require("cron").CronJob;
var async = require('async');

var dc = require('mcp_dao').dc;

var service = require('mcp_service');
var termSer = service.termSer;
var notifySer = service.notifySer;

var esut = require("easy_util");
var log = esut.log;
var digestUtil = esut.digestUtil;

var task = require('mcp_task');

var cons = require('mcp_cons');
var termStatus = cons.termStatus;

/**
 *
 * @param games 要扫描的游戏列表
 * @constructor
 */
var CheckJob = function(games)
{
    var self = this;
    self.job = new CronJob('*/20 * * * * *', function () {
        async.eachSeries(games, function(gameCode, callback) {
            self.handle(gameCode, function(err, term){
                log.info(err);
                callback();
            });
        }, function(err){
            log.info("扫描需要算奖的期次任务结束.......");
        });
    });
    self.job.start();
}

/**
 * 扫描gameCode对应的游戏，是否有需要算奖的期次
 * @param gameCode
 * @param cb
 */
CheckJob.prototype.handle = function(gameCode, cb)
{
    var self = this;
    async.waterfall([
        //扫描期次表
        function(cb)
        {
            termSer.findToCheck(gameCode, function(err, term){
                cb(err, term);
            });
        },
        //发送期次通知
        function(term, cb)
        {
            notifySer.sendTerm(term, function(err, data){
                cb(err, term);
            });
        },
        //记录操作日志，期次算奖中
        function(term, cb)
        {
            var termlog = {
                id:digestUtil.createUUID(),
                termId:term.id,
		handleCode:0,
                hTime:new Date(),
                userId:"SYSTEM",
                description:"算奖中,开奖号码:" + term.winningNumber
            };
            var table = dc.main.get("termlog");
            table.save(termlog, [], function(err, data){
                cb(err, term);
            });
        },
        //执行算奖任务
        function(term, cb)
        {
            self.handleTerm(term, function(err, data){
                cb(err, term);
            });
        },
        //更新期次状态(已经算奖)
        function(term, cb)
        {
            var table = dc.main.get("term");
            var cond = {id:term.id, status:term.status};
            var data = {
                $set:{
                    status:termStatus.CALCULATE
                }
            };
            table.update(cond, data, [], function(err, data){
                cb(err, term);
            });
        },
        //记录操作日志，期次已算奖
        function(term, cb)
        {
            var termlog = {
                id:digestUtil.createUUID(),
                termId:term.id,
		handleCode:0,
                hTime:new Date(),
                userId:"SYSTEM",
                description:"已算奖"
            };
            var table = dc.main.get("termlog");
            table.save(termlog, [], function(err, data){
                cb(err, term);
            });
        }
    ], function (err, rst) {
        cb(err, rst);
    });
}

/**
 * 对目标期次进行算奖
 * @param term
 * @param cb
 */
CheckJob.prototype.handleTerm = function(term, cb)
{
    var self = this;
    var checkTask = new task.Check(term, JSON.parse(term.prizeDesc));
    async.waterfall([
        //对ticket进行算奖
        function(cb)
        {
            checkTask.checkTicket(function(err, data){
                cb(err);
            });
        },
        //统计信息
        function(cb)
        {
            checkTask.generateInfo(function(err, data){
                cb(err);
            });
        }
    ], function (err, rst) {
        cb(err, rst);
    });
}


module.exports = CheckJob;
